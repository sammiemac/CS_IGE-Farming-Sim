:: StoryTitle
CS + IGE Farming Sim


:: StoryData
{
  "ifid": "D2EDA601-D58B-40C5-9FD3-41500E0E72D7",
  "format": "Harlowe",
  "format-version": "3.3.7",
  "start": "Start",
  "tag-colors": {
    "startup": "red"
  },
  "zoom": 1
}


:: Bean Farm {"position":"700,400","size":"100,100"}
(set: $crop1 to "beans")(set: $guide to "Adriana")(set: $plot's 1st to "beans")[Beans? Good choice! Beans have a long history in Mexico, as beans are an integral part of the Mexican diet. This food is deeply engrained in Mexican dishes and cultural practices.]

I'll have you work with $guide to help get your farm started!

[[Speak to $guide|Starting Farmhand]]


:: Cassava Farm {"position":"700,550","size":"100,100"}
(set: $crop1 to "cassava")(set: $guide to "Hery")(set: $plot's 1st to "cassava")[Cassava? Good choice! Cassava is a staple food crop in Madagascar, Africa. The crop is often featured in traditional ceremonies and rituals.]

I'll have you work with $guide to help get your farm started!

[[Speak to $guide|Starting Farmhand]]


:: Choose Your Crop {"position":"500,300","size":"100,100"}
Hello! Welcome to the shop where you can buy your first crop. After you grow and harvest your first crop, you can sell your crops at the store to increase your income.

Which crop did you want to grow?

[[Start with a Rice farm|Rice Farm]]
[[Start with a Corn farm|Corn Farm]]
[[Start with a Bean farm|Bean Farm]]
[[Start with a Cassava farm|Cassava Farm]]


:: Corn Farm {"position":"700,200","size":"100,100"}
(set: $crop1 to "corn")(set: $guide to "Kuruk")(set: $plot's 1st to "corn")[Corn? Good choice! Corn has deep cultural and historical roots in Native American traditions, as it played a vital role in the diets of indigenous peoples. It is celebrated in multiple festivals and events across the country.]

I'll have you work with $guide to help get your farm started!

[[Speak to $guide|Starting Farmhand]]


:: Crop Details {"position":"1050,50","size":"100,100"}
{
(if: $crop1 is "rice")[Rice traces back more than 10,000 years ago and it was given as a gift from the animals after a large flood, giving the Chinese people a source of plentiful food. It is considered sacred and has shaped cultures and traditions for centuries in Asia.]
(else-if: $crop1 is "corn")[Corn is also known as maize. It has been deeply rooted in Native American tradition and also serves other purposes, such as the making of mats, baskets, ceremonial rattling sticks, carved to create darts, toys, and more.]
(else-if: $crop1 is "beans")[Beans have been around since pre-Hispanic Mexico and served as a base for daily meals. They were consumed ground up, processed into a paste, or mixed with grains. On cold days, beans were milled into powder and mixed with corn flour to create masa for tamales.]
(else:)[In the middle of the nineteenth century, cassava became increasingly important as a staple food and was widely planted in Africa. It thrives in our environment because of its low water requirement, survivability in marginal soils, and flexibility in harvest time. No part of cassava goes to waste as parts are dried and fed to animals and the water squeezed from the fermeted cassava, the starch, is used to harden cloths.]
}

Ready to get to farming?

[[Yup!|Farm]]


:: Ending {"position":"1675,400","size":"100,100"}
Hey $name, it's $guide again! Looks like the quality of $farmName...

(event: when time > 4s)[(if: $farmScore >= 7)[...did amazing! Well done!](else:)[...could use some improvements. But you can always try again!]]

(event: when time > 8s)[''THE END'']


:: Farm {"position":"1225,425","size":"100,100"}
{
(set: $weather to (random: 0, 100))
(if: $weather >= 80)[The weather is rainy.]
(else-if: $weather <= 20)[There is a drought.]
(else:)[The weather is clear.]
}

[Farm score: $farmScore]

[[Check on the plots|Farm Plots]]
[[Visit the Farm Store|Farm Store]]
[[Talk to $guide about $crop1|Crop Details]]
[[Finish working on the farm|Ending]]


:: Farm Name {"position":"300,300","size":"100,100"}
(set: $farmName to (prompt: "What is your farm named?", ""))

{
(if: $farmName is not "")[$farmName! I like the sound of it! Catchy! Now that we got introductions out of the way, it's time to choose which crop you want to farm! Let's go to the store to buy your first crop.

[[Okay!|Choose Your Crop]]](else:)[Umm... Did you hear me? What was your farm's name?

[[Sorry, the name of my farm is...|Farm Name]]]
}


:: Farm Plots {"position":"1225,650","size":"100,100"}
[Which plot would you like to check on?]

[[Check on (print: $plot's 1st) plot|Plot 1 Status]]
[[Check on (print: $plot's 2nd) plot|Plot 2 Status]]
[[Check on (print: $plot's 3rd) plot|Plot 3 Status]]
[[Check on (print: $plot's 4th) plot|Plot 4 Status]]
[[Head back|Farm]]


:: Farm Store {"position":"1475,100","size":"100,100"}

[Welcome to the Farm Store $name! How can I help you? ]

[[Buy|Purchase Menu]]
[[Sell|Sell Menu]]
[[Head back to the farm|Farm]]


:: Farmer Name {"position":"300,100","size":"100,100"}
(set: $name to (prompt: "What is your name?", ""))

(if: $name is not "")[Hey there, $name! Welcome to your new farm! What did you want to name your farm?

[[My farm is called...|Farm Name]]](else:)[Uhh... Hello? You there? What was your name?

[[Sorry, my name is...|Farmer Name]]]


:: Plot 1 Status {"position":"1050,850","size":"100,100"}
{
<!-- the farm score should only be incremented once during the initial check -->
(if: ($plot's 1st is not "empty") and ($weather < 80 and > 20) and ($plotChecked's 1st is false)) [The (print: $plot's 1st) seems to be doing well enough. (set: $farmScore to it +1) (set: $plotChecked's 1st to true) (set: $cropStatus's 1st to "normal")]
(else-if: ($plot's 1st is not "empty") and ($weather <= 20) and ($plotChecked's 1st is false))[The (print: $plot's 1st) is in dire need of water..  (set: $farmScore to it -1) (set: $plotChecked's 1st to true) (set: $cropStatus's 1st to "parched")]
(else-if: ($plot's 1st is not "empty") and ($weather >= 80) and ($plotChecked's 1st is false))[The (print: $plot's 1st) seems to be flourishing!  (set: $farmScore to it +2) (set: $plotChecked's 1st to true) (set: $cropStatus's 1st to "hydrated")]
<!-- once plot has been checked, this branch will execute on subsequent checks until status is reset with the next day -->
(else-if: ($plot's 1st is not "empty") and ($plotChecked's 1st is true))
[The (print: $plot's 1st) is (print: $cropStatus's 1st).]
(else:) [Nothing here except for future potential...]
}

[[Check out another plot.|Farm Plots]]
[[Head back.|Farm]]


:: Plot 2 Status {"position":"1175,850","size":"100,100"}
{
<!-- the farm score should only be incremented once during the initial check -->
(if: ($plot's 2nd is not "empty") and ($weather < 80 and > 20) and ($plotChecked's 2nd is false)) [The (print: $plot's 2nd) seems to be doing well enough. (set: $farmScore to it +1) (set: $plotChecked's 2nd to true) (set: $cropStatus's 2nd to "normal")]
(else-if: ($plot's 1st is not "empty") and ($weather <= 20) and ($plotChecked's 2nd is false))[The (print: $plot's 2nd) is in dire need of water..  (set: $farmScore to it -1) (set: $plotChecked's 2nd to true) (set: $cropStatus's 2nd to "parched")]
(else-if: ($plot's 2nd is not "empty") and ($weather >= 80) and ($plotChecked's 2nd is false))[The (print: $plot's 2nd) seems to be flourishing!  (set: $farmScore to it +2) (set: $plotChecked's 2nd to true) (set: $cropStatus's 2nd to "hydrated")]
<!-- once plot has been checked, this branch will execute on subsequent checks until status is reset with the next day -->
(else-if: ($plot's 2nd is not "empty") and ($plotChecked's 2nd is true))
[The (print: $plot's 2nd) is (print: $cropStatus's 2nd).]
(else:) [Nothing here except for future potential...]
}


[[Check out another plot.|Farm Plots]]
[[Head back.|Farm]]


:: Plot 3 Status {"position":"1325,850","size":"100,100"}
{
<!-- the farm score should only be incremented once during the initial check -->
(if: ($plot's 3rd is not "empty") and ($weather < 80 and > 20) and ($plotChecked's 3rd is false)) [The (print: $plot's 3rd) seems to be doing well enough. (set: $farmScore to it +1) (set: $plotChecked's 3rd to true) (set: $cropStatus's 3rd to "normal")]
(else-if: ($plot's 1st is not "empty") and ($weather <= 20) and ($plotChecked's 3rd is false))[The (print: $plot's 3rd) is in dire need of water..  (set: $farmScore to it -1) (set: $plotChecked's 3rd to true) (set: $cropStatus's 3rd to "parched")]
(else-if: ($plot's 3rd is not "empty") and ($weather >= 80) and ($plotChecked's 3rd is false))[The (print: $plot's 3rd) seems to be flourishing!  (set: $farmScore to it +2) (set: $plotChecked's 3rd to true) (set: $cropStatus's 3rd to "hydrated")]
<!-- once plot has been checked, this branch will execute on subsequent checks until status is reset with the next day -->
(else-if: ($plot's 3rd is not "empty") and ($plotChecked's 3rd is true))
[The (print: $plot's 3rd) is (print: $cropStatus's 3rd).]
(else:) [Nothing here except for future potential...]
}

[[Check out another plot.|Farm Plots]]
[[Head back.|Farm]]


:: Plot 4 Status {"position":"1450,850","size":"100,100"}
{
<!-- the farm score should only be incremented once during the initial check -->
(if: ($plot's 4th is not "empty") and ($weather < 80 and > 20) and ($plotChecked's 4th is false)) [The (print: $plot's 4th) seems to be doing well enough. (set: $farmScore to it +1) (set: $plotChecked's 4th to true) (set: $cropStatus's 4th to "normal")]
(else-if: ($plot's 1st is not "empty") and ($weather <= 20) and ($plotChecked's 4th is false))[The (print: $plot's 4th) is in dire need of water..  (set: $farmScore to it -1) (set: $plotChecked's 4th to true) (set: $cropStatus's 4th to "parched")]
(else-if: ($plot's 4th is not "empty") and ($weather >= 80) and ($plotChecked's 4th is false))[The (print: $plot's 4th) seems to be flourishing!  (set: $farmScore to it +2) (set: $plotChecked's 4th to true) (set: $cropStatus's 4th to "hydrated")]
<!-- once plot has been checked, this branch will execute on subsequent checks until status is reset with the next day -->
(else-if: ($plot's 4th is not "empty") and ($plotChecked's 4th is true))
[The (print: $plot's 4th) is (print: $cropStatus's 4th).]
(else:) [Nothing here except for future potential...]
}

[[Check out another plot.|Farm Plots]]
[[Head back.|Farm]]


:: Purchase Menu {"position":"1300,150","size":"100,100"}
[Excellent! What would you like to purchase?]

[[Go back|Farm Store]]


:: Rice Farm {"position":"700,50","size":"100,100"}
(set: $crop1 to "rice")(set: $guide to "Mei")(set: $plot's 1st to "rice")[Rice? Good choice! Rice is a staple food for the Asian population. The cultivation of rice has led to a successful agricultural heritage of many Asian societies.]

I'll have you work with $guide to help get your farm started!

[[Speak to $guide|Starting Farmhand]]


:: Sell Menu {"position":"1650,150","size":"100,100"}
[Excellent! What would you like to sell?]

[[Go back|Farm Store]]


:: Start {"position":"100,300","size":"100,100"}
Hello! Welcome to Farming Simulator 2023!

What's your name?

[[My name is...|Farmer Name]]

<!--Hey fellow programmer! You can adjust any of the narrative stuff in these next few passages. I just wanted to implement variables for the user name and their farm name for
personalization. Remove this comment once you've done so -->


:: Starting Farmhand {"position":"900,300","size":"100,100"}
Hi there! You're $name, right? My name is $guide and I'll be helping you grow your $crop1 on $farmName.

If you have any questions, lemme know. Otherwise, let's start farming!

[[Ask about $crop1|Crop Details]]
[[Start farming!|Farm]]


:: Startup [startup] {"position":"300,500","size":"100,100"}
(set: $name to "Avery")
(set: $farmName to "Great Farms")
(set: $crop1 to "rice")
(set: $crop2 to "empty")
(set: $crop3 to "empty")
(set: $crop4 to "empty")
<!-- crops can be in one of three states: hydrated, normal, or parched-->
(set: $cropStatus to (a: "normal", "normal", "normal", "normal"))
(set: $guide to "Mei")
(set: $gold to 30)
(set: $weeks to 10)
(set: $weather to 50)
(set: $farmScore to 0)
(set: $plot to (a: $crop1, $crop2, $crop3, $crop4))
(set: $plotChecked to (a: false, false, false, false))

<!--Preset values, will get changed as game progresses-->
